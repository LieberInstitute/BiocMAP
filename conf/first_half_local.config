//=============================================================================
//  Hardware and software configuration for pipeline execution on a single 
//  machine, locally
//=============================================================================

//  Add locally installed software to path-related environment variables
repoDir=System.getProperty("user.dir")
env.LD_LIBRARY_PATH="$repoDir/Software/lib:System.getenv('LD_LIBRARY_PATH')"
env.PATH="$repoDir/Software/bin:System.getenv('PATH')"

params {
    //-------------------------------------------------------------------------
    //  Annotation-related settings
    //-------------------------------------------------------------------------
    
    gencode_version_human = "34"
    gencode_version_mouse = "M23"
    anno_build = "main" // main or primary (main is canonical seqs only)
    
    //-------------------------------------------------------------------------
    //  Arioc alignment settings; see the following for more info:
    //  
    //    -Arioc docs: https://github.com/RWilton/Arioc/blob/master/Arioc.guide.pdf
    //    -our docs: http://research.libd.org/WGBS-Pipeline/configuration.html#arioc-settings
    //-------------------------------------------------------------------------
    
    // Number of reads per batch per GPU: this scales closely with the amount
    // of GPU memory that will be required, and thus will be GPU-dependent
    batch_size = "32k"
    
    // Different seed widths and hash-value sizes can be set here, potentially
    // affecting alignment sensitivity and GPU memory requirements. Arioc has a
    // "gapped" and "nongapped" lookup table, which each have an associated
    // seed.
    gapped_seed = "hsi25_0_30_CT"
    nongapped_seed = "ssi84_2_30_CT"
    
    // Literal arguments passed to the "gapped" and "nongapped" elements of
    // alignment configs for Arioc, respectively. Variables like "maxJ" and
    // "seedDepth" may be raised to increase sensitivity or lowered to increase
    // speed, for example.
    gapped_args = 'Wmxgs="2,6,5,3" Vt="L,0,1" maxJ="20" seedDepth="4"'
    nongapped_args = 'maxJ="200" maxMismatches="5"'
    
    // Settings that mostly can optimize performance for particular hardware:
    // for example, the "useHinGmem" variable controls whether lookup tables 
    // are placed in GPU memory vs. system memory
    x_args = 'watchdogInterval="60" cgaReserved="24M" useHinGmem="0" useJinGmem="0" useHJinGPmem="0" serialLUTinit="1"'
    
    // The number of GPUs to use for alignment of each sample. It is only
    // recommended to raise this above 1 if there are more GPUs available than
    // samples.
    max_gpus = 1
    
    // The percentage of volatile GPU utilization, below which a GPU is
    // considered to be unoccupied, and therefore available to this pipeline
    gpu_perc_usage_cutoff = 10
}

//-----------------------------------------------------------------------------
//  Hardware resource requirements
//-----------------------------------------------------------------------------

executor {
    name = 'local'
}

process {

    cache = 'lenient'
    
    withName: PullReference {
        cpus = 1
        memory = 5.GB
    }
  
    withName: PrepareReference {
        cpus = 1
        memory = 3.GB
    }
    
    withName: EncodeReference {
        cpus = 1
        memory = 80.GB
    }
  
    withName: PreprocessInputs {
        cpus = 1
        memory = 3.GB
    }
    
    withName: FastQC_Untrimmed {
        cpus = 2
        memory = 10.GB
    }
    
    withName: Trimming {
        cpus = 1
        memory = 5.GB
    }
    
    withName: WriteAriocConfigs {
        cpus = 1
        memory = 2.GB
    }
    
    withName: EncodeReads {
        cpus = 1
        memory = 80.GB
    }
    
    withName: AlignReads {
        cpus = 1
        memory = 80.GB
    }
    
    withName: FilterAlignments {
        cpus = 2
        memory = 16.GB
    }
    
    withName: MakeRules {
        cpus = 1
        memory = 2.GB
    }
}
