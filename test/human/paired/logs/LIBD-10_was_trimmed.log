Loading LIBD module for trimgalore/0.6.6
Loading LIBD module for FastQC/0.11.8
Multicore support not enabled. Proceeding with single-core trimming.
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 3.4
single-core operation.
No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)

Using user-specified basename (>>LIBD-10<<) instead of deriving the filename from the input file(s)
Writing report to 'LIBD-10_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: LIBD-10_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 3.4
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--extract'

Cutadapt seems to be fairly up-to-date (version 3.4). Setting -j 1
Writing final adapter and quality trimmed output to LIBD-10_1_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file LIBD-10_1.fastq.gz <<< 
This is cutadapt 3.4 with Python 3.7.3
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC LIBD-10_1.fastq.gz
Processing reads on 1 core in single-end mode ...
Finished in 0.53 s (21 µs/read; 2.81 M reads/minute).

=== Summary ===

Total reads processed:                  25,000
Reads with adapters:                    18,274 (73.1%)
Reads written (passing filters):        25,000 (100.0%)

Total basepairs processed:     3,775,000 bp
Quality-trimmed:                  36,990 bp (1.0%)
Total written (filtered):      3,221,802 bp (85.3%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 18274 times

No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 29.7%
  C: 2.6%
  G: 21.2%
  T: 46.4%
  none/other: 0.1%

Overview of removed sequences
length	count	expect	max.err	error counts
1	3559	6250.0	0	3559
2	856	1562.5	0	856
3	494	390.6	0	494
4	217	97.7	0	217
5	185	24.4	0	185
6	141	6.1	0	141
7	136	1.5	0	136
8	130	0.4	0	130
9	229	0.1	0	228 1
10	152	0.0	1	136 16
11	203	0.0	1	178 25
12	155	0.0	1	128 27
13	176	0.0	1	153 23
14	175	0.0	1	143 32
15	172	0.0	1	150 22
16	189	0.0	1	155 34
17	213	0.0	1	173 40
18	240	0.0	1	212 28
19	122	0.0	1	106 16
20	234	0.0	1	198 36
21	169	0.0	1	143 26
22	182	0.0	1	154 28
23	164	0.0	1	147 17
24	216	0.0	1	177 39
25	246	0.0	1	213 33
26	194	0.0	1	169 25
27	197	0.0	1	155 42
28	249	0.0	1	206 43
29	250	0.0	1	217 33
30	222	0.0	1	192 30
31	169	0.0	1	146 23
32	231	0.0	1	193 38
33	205	0.0	1	169 36
34	274	0.0	1	240 34
35	149	0.0	1	125 24
36	225	0.0	1	197 28
37	190	0.0	1	164 26
38	207	0.0	1	188 19
39	243	0.0	1	218 25
40	217	0.0	1	168 49
41	213	0.0	1	183 30
42	232	0.0	1	200 32
43	372	0.0	1	311 61
44	171	0.0	1	146 25
45	387	0.0	1	339 48
46	95	0.0	1	73 22
47	200	0.0	1	167 33
48	133	0.0	1	117 16
49	134	0.0	1	114 20
50	221	0.0	1	191 30
51	186	0.0	1	158 28
52	165	0.0	1	151 14
53	206	0.0	1	171 35
54	344	0.0	1	291 53
55	205	0.0	1	179 26
56	100	0.0	1	94 6
57	208	0.0	1	178 30
58	148	0.0	1	126 22
59	154	0.0	1	137 17
60	203	0.0	1	178 25
61	125	0.0	1	110 15
62	133	0.0	1	117 16
63	183	0.0	1	162 21
64	108	0.0	1	93 15
65	111	0.0	1	94 17
66	112	0.0	1	95 17
67	86	0.0	1	71 15
68	126	0.0	1	104 22
69	101	0.0	1	93 8
70	96	0.0	1	82 14
71	125	0.0	1	111 14
72	414	0.0	1	372 42
73	95	0.0	1	81 14
74	26	0.0	1	23 3
75	22	0.0	1	20 2
76	22	0.0	1	20 2
77	19	0.0	1	16 3
78	11	0.0	1	9 2
79	14	0.0	1	11 3
80	4	0.0	1	4
81	10	0.0	1	9 1
82	12	0.0	1	10 2
83	7	0.0	1	4 3
84	5	0.0	1	4 1
85	6	0.0	1	6
86	3	0.0	1	3
87	4	0.0	1	3 1
88	4	0.0	1	3 1
89	6	0.0	1	6
90	1	0.0	1	0 1
91	3	0.0	1	2 1
92	1	0.0	1	1
93	4	0.0	1	3 1
94	3	0.0	1	3
96	2	0.0	1	2
97	1	0.0	1	1
98	1	0.0	1	1
100	2	0.0	1	2
101	2	0.0	1	1 1
102	1	0.0	1	0 1
103	1	0.0	1	0 1
110	1	0.0	1	1
112	1	0.0	1	1
142	1	0.0	1	1
146	1	0.0	1	1
150	1	0.0	1	0 1
151	3	0.0	1	2 1

RUN STATISTICS FOR INPUT FILE: LIBD-10_1.fastq.gz
=============================================
25000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'LIBD-10_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: LIBD-10_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.6
Cutadapt version: 3.4
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '--extract'

Cutadapt seems to be fairly up-to-date (version 3.4). Setting -j -j 1
Writing final adapter and quality trimmed output to LIBD-10_2_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file LIBD-10_2.fastq.gz <<< 
This is cutadapt 3.4 with Python 3.7.3
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC LIBD-10_2.fastq.gz
Processing reads on 1 core in single-end mode ...
Finished in 0.48 s (19 µs/read; 3.12 M reads/minute).

=== Summary ===

Total reads processed:                  25,000
Reads with adapters:                    12,611 (50.4%)
Reads written (passing filters):        25,000 (100.0%)

Total basepairs processed:     3,775,000 bp
Quality-trimmed:                  75,286 bp (2.0%)
Total written (filtered):      3,683,960 bp (97.6%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 12611 times

No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 56.7%
  C: 18.0%
  G: 0.8%
  T: 24.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11711	6250.0	0	11711
2	177	1562.5	0	177
3	230	390.6	0	230
4	140	97.7	0	140
5	329	24.4	0	329
6	1	6.1	0	1
7	1	1.5	0	1
8	2	0.4	0	2
9	1	0.1	0	1
10	2	0.0	1	2
15	1	0.0	1	1
16	1	0.0	1	1
17	2	0.0	1	2
21	1	0.0	1	1
27	1	0.0	1	1
29	1	0.0	1	1
38	1	0.0	1	0 1
40	1	0.0	1	1
44	1	0.0	1	1
48	2	0.0	1	2
59	1	0.0	1	0 1
64	1	0.0	1	1
65	1	0.0	1	0 1
68	1	0.0	1	1
120	1	0.0	1	0 1

RUN STATISTICS FOR INPUT FILE: LIBD-10_2.fastq.gz
=============================================
25000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files LIBD-10_1_trimmed.fq and LIBD-10_2_trimmed.fq
Now renaming the output files

ORIGINAL FILE 1: >>LIBD-10_1_trimmed.fq<<	RENAMING TO:>>LIBD-10_R1_trimmed.fq<<
ORIGINAL FILE 2: >>LIBD-10_2_trimmed.fq<<	RENAMING TO:>>LIBD-10_R2_trimmed.fq<<
file_1: LIBD-10_R1_trimmed.fq, file_2: LIBD-10_R2_trimmed.fq


>>>>> Now validing the length of the 2 paired-end infiles: LIBD-10_R1_trimmed.fq and LIBD-10_R2_trimmed.fq <<<<<
Renaming the output files (AGAIN).
Writing validated paired-end Read 1 reads to LIBD-10_val_1.fq
Writing validated paired-end Read 2 reads to LIBD-10_val_2.fq

Total number of sequences analysed: 25000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 107 (0.43%)


  >>> Now running FastQC on the validated data LIBD-10_val_1.fq<<<

Started analysis of LIBD-10_val_1.fq
Approx 5% complete for LIBD-10_val_1.fq
Approx 10% complete for LIBD-10_val_1.fq
Approx 15% complete for LIBD-10_val_1.fq
Approx 20% complete for LIBD-10_val_1.fq
Approx 25% complete for LIBD-10_val_1.fq
Approx 30% complete for LIBD-10_val_1.fq
Approx 35% complete for LIBD-10_val_1.fq
Approx 40% complete for LIBD-10_val_1.fq
Approx 45% complete for LIBD-10_val_1.fq
Approx 50% complete for LIBD-10_val_1.fq
Approx 55% complete for LIBD-10_val_1.fq
Approx 60% complete for LIBD-10_val_1.fq
Approx 65% complete for LIBD-10_val_1.fq
Approx 70% complete for LIBD-10_val_1.fq
Approx 75% complete for LIBD-10_val_1.fq
Approx 80% complete for LIBD-10_val_1.fq
Approx 85% complete for LIBD-10_val_1.fq
Approx 90% complete for LIBD-10_val_1.fq
Approx 95% complete for LIBD-10_val_1.fq
Analysis complete for LIBD-10_val_1.fq

  >>> Now running FastQC on the validated data LIBD-10_val_2.fq<<<

Started analysis of LIBD-10_val_2.fq
Approx 5% complete for LIBD-10_val_2.fq
Approx 10% complete for LIBD-10_val_2.fq
Approx 15% complete for LIBD-10_val_2.fq
Approx 20% complete for LIBD-10_val_2.fq
Approx 25% complete for LIBD-10_val_2.fq
Approx 30% complete for LIBD-10_val_2.fq
Approx 35% complete for LIBD-10_val_2.fq
Approx 40% complete for LIBD-10_val_2.fq
Approx 45% complete for LIBD-10_val_2.fq
Approx 50% complete for LIBD-10_val_2.fq
Approx 55% complete for LIBD-10_val_2.fq
Approx 60% complete for LIBD-10_val_2.fq
Approx 65% complete for LIBD-10_val_2.fq
Approx 70% complete for LIBD-10_val_2.fq
Approx 75% complete for LIBD-10_val_2.fq
Approx 80% complete for LIBD-10_val_2.fq
Approx 85% complete for LIBD-10_val_2.fq
Approx 90% complete for LIBD-10_val_2.fq
Approx 95% complete for LIBD-10_val_2.fq
Analysis complete for LIBD-10_val_2.fq
Deleting both intermediate output files LIBD-10_R1_trimmed.fq and LIBD-10_R2_trimmed.fq

====================================================================================================

